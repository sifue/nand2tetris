// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl
/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // 記憶するのに使いそうな部品
    // - Register (16bit保存) (in16, load, out16)
    // アドレスを分岐させるのに使いそう
    // - DMux8Way (in, sel[3], outa, outb, outc, outd, oute, outf, outg, outh)
    // レジスタの出力を集約するのに使えそう
    // - Mux8Way16 (ina, inb, inc, ind, ine, inf, ing, inh, sel[3], out)
    DMux8Way(in=load, sel=address, a=loada, b=loadb, c=loadc, d=loadd, e=loade, f=loadf, g=loadg, h=loadh);

    // レジスタを8個なれべて、それぞれのレジスタに分岐したロード信号を送る
    Register(in=in, load=loada, out=outa);
    Register(in=in, load=loadb, out=outb);
    Register(in=in, load=loadc, out=outc);
    Register(in=in, load=loadd, out=outd);
    Register(in=in, load=loade, out=oute);
    Register(in=in, load=loadf, out=outf);
    Register(in=in, load=loadg, out=outg);
    Register(in=in, load=loadh, out=outh);

    // それぞれのレジスタの出力を集約してアドレスの指定のものを出力
    Mux8Way16(a=outa, b=outb, c=outc, d=outd, e=oute, f=outf, g=outg, h=outh, sel=address, out=out);
}
